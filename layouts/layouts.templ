package layouts

import (
	"slices"

	"github.com/svuvi/theweek/models"
	"github.com/svuvi/theweek/components"
	"fmt"
)

templ Base(tabTitle string, authorized bool, user *models.User) {
	<!DOCTYPE html>
	<html lang="ru-RU">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>{ tabTitle }</title>
			<link rel="stylesheet" href="/static/style.css">
			<link rel="preconnect" href="https://fonts.googleapis.com">
			<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
			<link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap" rel="stylesheet">
			<script src="/static/htmx.min.js"></script>
			<meta name="htmx-config" content='{"responseHandling": [{"code":".*", "swap": true}]}'/>
		</head>
		<body>
			@components.Header(authorized, user)
			{ children... }
		</body>
	</html>
}

templ Index(articles []*models.Article, authorized bool, user *models.User) {
	@Base("The Week - Новости Урбанойда", authorized, user) {
		for _, art := range slices.Backward(articles) {
			@components.ArticlePreview(art)
		}
	}
}

templ Article(article *models.Article, authorized bool, user *models.User) {
	@Base(fmt.Sprint(article.Title, " - The Week"), authorized, user) {
		<article>
			<h1>{ article.Title }</h1>
			<p>{ article.CreatedAt.String() }</p>
			@components.MarkdownText(article.TextMD)
		</article>
	}
}

templ LoginPage(authorized bool, user *models.User) {
	@Base("Вход в Аккаунт The Week", authorized, user) {
		@components.LoginForm("", "", templ.NopComponent, templ.NopComponent)
	}
}

templ RegistrationPage(authorized bool, user *models.User) {
	@Base("Регистрация Аккаунта в The Week", authorized, user) {
		@components.RegistrationForm("", "", "", templ.NopComponent, templ.NopComponent, templ.NopComponent)
	}
}