package layouts


import (
    "fmt"

    "github.com/svuvi/theweek/models"
	"github.com/svuvi/theweek/components"
)

templ BaseDashboard(title string) {
    <!DOCTYPE html>
    <html lang="ru-RU">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{ title }</title>
        <link rel="stylesheet" href="/static/style.css">
        <link rel="stylesheet" href="/static/dashboard.css">
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap" rel="stylesheet">
        <script src="/static/htmx.min.js"></script>
        <meta name="htmx-config" content='{"responseHandling": [{"code":".*", "swap": true}]}'/>
    </head>
    <body class="dashboard inter-regular">
        <div class="dashboard-left-menu">
            <a href="/" class="chomsky"><h1>The Week</h1></a>
            <a href="/dashboard/">–ü–∞–Ω–µ–ª—å –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è</a>
            <a href="/dashboard/users/">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</a>
            <a href="/dashboard/invites/">–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è</a>
            <a href="/dashboard/publishing/">–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å—é</a>
        </div>
        { children... }
    </body>
    </html>
}

templ DashboardHome() {
    @BaseDashboard("–ì–ª–∞–≤–Ω–∞—è - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è The Week") {
        
    }
}

templ DashboardInvites(invites []*models.Invite) {
    @BaseDashboard("–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è The Week") {
        <buttton class="button-1" hx-post="/dashboard/invites/create" hx-target="#invites">–°–æ–∑–¥–∞—Ç—å üìù</buttton>
        @components.InviteTable(invites)        
    }
}

templ DashboardUsers(users []*models.User) {
    @BaseDashboard("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è The Week") {
        @components.UserTable(users)
    }
}


templ PublishingPage(authorized bool, user *models.User, article *models.Article) {
	@BaseDashboard("–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏ –≤ The Week") {
		if authorized && user.IsAdmin {
            @components.PublishingForm(templ.NopComponent, templ.NopComponent, article)
		} else {
			<div class="inter-regular">
				<p>–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –¥–µ–ª–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</p>
				<a href="/">–ù–∞ –≥–ª–∞–≤–Ω—É—é</a>
			</div>
		}
	}
}

templ ArticleReviewMode(article *models.Article, authorized bool, user *models.User) {
	@Base(fmt.Sprint(article.Title, " - The Week"), components.MetaTagsArticle(article)) {
		@components.Header(user, true)
		@components.Article(article)
	}
}